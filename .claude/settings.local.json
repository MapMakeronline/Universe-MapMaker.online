{
  "permissions": {
    "allow": [
      "Bash(gcloud sql instances list:*)",
      "Bash(gcloud sql instances describe:*)",
      "Bash(gcloud compute ssh:*)",
      "Bash(curl -X GET \"https://api.universemapmaker.online/api/projects/new/json?project=UniejowMwSuikzp_2023_03_28_07_21_26&published=true&save=false\" -s -w \"\\nHTTP Status: %{http_code}\\nTotal time: %{time_total}s\\n\" --max-time 10)",
      "Bash(curl -X GET \"https://api.universemapmaker.online/api/projects/new/json?project=test&published=true\" -s -w \"\\nHTTP Status: %{http_code}\\nTotal time: %{time_total}s\\n\" --max-time 10)",
      "Bash(npm run build:*)",
      "Bash(gcloud compute instances list:*)",
      "Bash(curl:*)",
      "Bash(npm install:*)",
      "Read(//c//**)",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfix: improve QGS import UX and add coordinate transformation\n\nMajor UX improvements for QGS import workflow:\n- Add progress feedback during 3-minute backend processing\n- Fix project sorting (newest first by created_at)\n- Fix timestamp display (UTC to local Polish time)\n- Add coordinate transformation (EPSG:2180 to EPSG:4326)\n- Connect layer tree to Redux for real-time updates\n\nChanges:\n- feat(import): add ''processing'' step with clear message\n- feat(projects): sort by created_at DESC in both tabs\n- feat(timestamp): convert UTC to local time with Polish locale\n- feat(coordinates): add proj4 transformation utilities\n- feat(layers): connect LeftPanel to Redux state\n- feat(api): complete RTK Query migration (52 endpoints)\n- docs: add comprehensive documentation for all fixes\n\nFiles changed:\n- CreateProjectDialog.tsx: Added processing step UI\n- OwnProjects.tsx: Added project sorting logic\n- PublicProjects.tsx: Added project sorting logic\n- ProjectCard.tsx: Added UTC to local time conversion\n- coordinates.ts: NEW coordinate transformation utilities\n- LeftPanel.tsx: Connected to Redux layers state\n- layersApi.ts: NEW RTK Query API for layers (29 endpoints)\n- map/page.tsx: Added automatic coordinate transformation\n\nFixes:\n- Invalid LngLat coordinate errors (EPSG:2180 vs EPSG:4326)\n- Missing progress feedback during import\n- Wrong timestamp display (2 hour difference)\n- New projects not appearing at top of list\n- Layer tree not loading imported layers\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git push:*)",
      "Bash(netstat:*)",
      "Bash(findstr:*)",
      "Bash(taskkill:*)",
      "Bash(cmd //c:*)",
      "Bash(npm run dev:*)",
      "Bash(git commit:*)",
      "Bash(npx:*)",
      "Bash(powershell:*)",
      "Bash(timeout:*)",
      "Bash(git rm:*)",
      "Bash(gcloud compute instances describe:*)",
      "Bash(gcloud sql instances patch:*)",
      "Bash(gcloud sql users set-password:*)",
      "Bash(git clone:*)",
      "Read(//tmp/backend-fix/geocraft/**)",
      "Read(//tmp/backend-fix/**)",
      "Bash(python:*)",
      "Bash(gcloud sql databases:*)",
      "Bash(gcloud beta sql connect:*)",
      "Bash(gcloud compute firewall-rules create:*)",
      "Bash(gcloud compute firewall-rules update:*)",
      "Bash(gh:*)",
      "Bash(echo:*)",
      "Bash(ls:*)",
      "Bash(gcloud logging read:*)",
      "Bash(npm view:*)",
      "Bash(git config:*)",
      "Bash(git checkout:*)",
      "Bash(cat:*)",
      "Bash(git rev-parse:*)",
      "Bash(gcloud builds submit:*)",
      "Bash(gcloud builds log:*)",
      "Bash(gcloud run services list:*)",
      "Bash(python3:*)",
      "Bash(gcloud compute scp:*)",
      "Bash(find:*)",
      "Read(//c/tmp/**)",
      "Read(//c/Users/mestw/Downloads/**)",
      "Bash(node:*)",
      "Bash(gcloud run services describe:*)",
      "Bash(npm run lint)",
      "Bash(git pull:*)",
      "Bash(git stash:*)",
      "Bash(sudo find:*)",
      "Bash(sudo docker ps:*)",
      "Bash(git restore:*)",
      "Bash(git revert:*)",
      "Bash(wc:*)",
      "Bash(git ls-tree:*)",
      "Bash(dir:*)",
      "Bash(git fetch:*)",
      "Bash(for i in {1..5})",
      "Bash(do curl -s \"https://api.universemapmaker.online/api/projects/new/json?project=graph&published=false&save=false\" -w \"\\nHTTP: %{http_code}\\n\" --max-time 3)",
      "Bash(done)",
      "Bash(git reset:*)",
      "Bash(tasklist)",
      "Bash(gcloud sql connect:*)",
      "Bash(gcloud builds:*)",
      "Bash(git log:*)",
      "Bash(gcloud run revisions list:*)",
      "Bash(start http://localhost:3000/map?project=graph)",
      "Bash(gcloud run revisions describe:*)",
      "Bash(start cmd /c \"npm run dev\")",
      "Bash(start:*)",
      "Bash(cmd /c screenshot.bat \"http://localhost:3000/map?project=test\")",
      "Bash(cloc:*)",
      "Bash(set ANALYZE=true)",
      "Bash(npm run analyze:*)",
      "Bash(depcheck:*)",
      "Bash(npm uninstall:*)",
      "Bash(ts-prune:*)",
      "Bash(jsinspect:*)",
      "Bash(jscpd:*)",
      "Bash(npm init playwright@latest)",
      "Bash(cmd /c screenshot.bat http://localhost:3000)",
      "Bash(chmod:*)",
      "Bash(./screenshot.sh:*)",
      "Bash(SCREENSHOT_URL=\"http://localhost:3000\" SCREENSHOT_NAME=\"playwright-test.png\" npx playwright test:*)",
      "Bash(SCREENSHOT_URL=\"http://localhost:3000\" SCREENSHOT_NAME=\"playwright-homepage.png\" npx playwright test:*)",
      "Bash(SCREENSHOT_URL=\"http://localhost:3000/dashboard\" SCREENSHOT_NAME=\"dashboard-npm-test.png\" npm run screenshot:*)",
      "Bash(where:*)",
      "Bash(SCREENSHOT_URL=\"http://localhost:3000\" SCREENSHOT_NAME=\"local-with-backend.png\" npm run screenshot:*)",
      "Bash(rm:*)",
      "Bash(rmdir:*)",
      "Bash(test:*)",
      "Bash(cmd /c taskkill /F /PID 16912)",
      "Bash(cmd /c screenshot.bat http://localhost:3002/map?project=test fab-toolbar-updated.png)",
      "Bash(mkdir -p \"c:\\Users\\Bartosz\\Desktop\\Universe-MapMaker.online\\src\\backend\\dashboard\\own-projects\")",
      "Bash(mkdir -p \"c:\\Users\\Bartosz\\Desktop\\Universe-MapMaker.online\\src\\backend\\dashboard\\public-projects\")",
      "Bash(mkdir -p \"c:\\Users\\Bartosz\\Desktop\\Universe-MapMaker.online\\src\\backend\\dashboard\\shared\")",
      "Bash(mkdir -p \"c:\\Users\\Bartosz\\Desktop\\Universe-MapMaker.online\\src\\backend\\dashboard\\admin-panel\")",
      "Bash(mkdir -p \"c:\\Users\\Bartosz\\Desktop\\Universe-MapMaker.online\\src\\backend\\dashboard\\profile\")",
      "Bash(mkdir -p \"c:\\Users\\Bartosz\\Desktop\\Universe-MapMaker.online\\src\\backend\\dashboard\\settings\")",
      "Bash(mkdir -p \"c:\\Users\\Bartosz\\Desktop\\Universe-MapMaker.online\\src\\backend\\dashboard\\payments\")",
      "Bash(mkdir -p \"c:\\Users\\Bartosz\\Desktop\\Universe-MapMaker.online\\src\\backend\\dashboard\\contact\")",
      "Bash(git rebase --continue)",
      "Read(//c/Users/Bartosz/Downloads/**)",
      "Bash(cmd /c taskkill /F /PID 8908)",
      "Bash(cmd /c screenshot.bat http://localhost:3000/dashboard endpoint4-password-change-ui.png)",
      "Bash(tree \"c:\\Users\\Bartosz\\Desktop\\Universe-MapMaker.online\\src\\features\\dashboard\" -L 3 -I \"node_modules\")",
      "Bash(cmd /c screenshot.bat http://localhost:3000/dashboard dashboard-cleanup-verification.png)",
      "Bash(cmd /c dir \"c:\\Users\\Bartosz\\Desktop\\Universe-MapMaker.online\\screenshots\")",
      "Bash(set PORT=3001)",
      "Bash(cmd /c screenshot.bat http://localhost:3001/auth google-oauth-button.png)",
      "Bash(cmd /c taskkill /PID 16760 /F)",
      "Bash(set PORT=3000)",
      "Bash(cmd /c taskkill /F /IM node.exe)",
      "Bash(cmd /c \"rmdir /S /Q .next\")",
      "Bash(cmd /c timeout /t 12)",
      "Bash(cmd /c timeout /t 5)",
      "Read(//c/Users/jakub/Documents/Mapmaker/universe/**)",
      "Bash(cmd /c taskkill /F /PID 16172)"
    ],
    "deny": [],
    "ask": []
  }
}
