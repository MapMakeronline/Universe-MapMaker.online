substitutions:
  _REGION: europe-central2
  _REPO: app-repo
  _SERVICE: universe-mapmaker
  _IMAGE_NAME: universe-mapmaker
options:
  logging: CLOUD_LOGGING_ONLY

steps:
  # 1) Build
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - build
      - -t
      - '$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPO/$_IMAGE_NAME:$COMMIT_SHA'
      - -t
      - '$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPO/$_IMAGE_NAME:latest'
      - .

  # 2) Push
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPO/$_IMAGE_NAME:$COMMIT_SHA']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPO/$_IMAGE_NAME:latest']

  # 3) Deploy do Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - run
      - deploy
      - '$_SERVICE'
      - '--image'
      - '$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPO/$_IMAGE_NAME:$COMMIT_SHA'
      - '--region'
      - '$_REGION'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--concurrency'
      - '80'
      - '--min-instances'
      - '0'
      # Jeśli chcesz wymusić SA runtime (opcjonalnie odkomentuj i podaj SA):
      # - '--service-account'
      # - 'cloudrun-runtime@universe-mapmaker.iam.gserviceaccount.com'

images:
  - '$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPO/$_IMAGE_NAME:$COMMIT_SHA'
  - '$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPO/$_IMAGE_NAME:latest'
